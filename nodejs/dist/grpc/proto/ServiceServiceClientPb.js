"use strict";
/**
 * @fileoverview gRPC-Web generated client stub for todoapp.grpc.models
 * @enhanceable
 * @public
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.HelloWorldClient = void 0;
// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v0.0.0
// source: service.proto
/* eslint-disable */
// @ts-nocheck
const grpcWeb = require("grpc-web");
const service_pb = require("./service_pb"); // proto import: "service.proto"
class HelloWorldClient {
    constructor(hostname, credentials, options) {
        this.methodDescriptorGreet = new grpcWeb.MethodDescriptor('/todoapp.grpc.models.HelloWorld/Greet', grpcWeb.MethodType.UNARY, service_pb.GreetRequest, service_pb.GreetResponse, (request) => {
            return request.serializeBinary();
        }, service_pb.GreetResponse.deserializeBinary);
        if (!options)
            options = {};
        if (!credentials)
            credentials = {};
        options['format'] = 'binary';
        this.client_ = new grpcWeb.GrpcWebClientBase(options);
        this.hostname_ = hostname.replace(/\/+$/, '');
        this.credentials_ = credentials;
        this.options_ = options;
    }
    greet(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/todoapp.grpc.models.HelloWorld/Greet', request, metadata || {}, this.methodDescriptorGreet, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/todoapp.grpc.models.HelloWorld/Greet', request, metadata || {}, this.methodDescriptorGreet);
    }
}
exports.HelloWorldClient = HelloWorldClient;
